var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');

var indexRouter = require('./routes/index');
var usersRouter = require('./routes/users');
const dealRouter = require('./routes/dealRouter');
const orderRouter = require('./routes/orderRouter');

const mongodb = require("mongodb").MongoClient;
const csvtojson = require("csvtojson");
///*
csvtojson() 
.fromFile("./csv_files/deals.csv")
.then(csvDealsData => {
  console.log("Length of deals array: ", csvDealsData.length);
  mongodb.connect(url,
  {useCreateIndex: true,
  useFindAndModify: false,
  useNewUrlParser: true,
  useUnifiedTopology: true
  },
  (err, client) => {
  if(err) throw err;

  client.db("salesdisplay_db")
  .collection("deals")
  .deleteMany((err, res) => {
    if(err) throw err;
    console.log("Deleted contents");
    //client.close();
  })
  //client.db("salesdisplay_db")
 // .collection("deals")
  .insertMany(csvDealsData, (err, res) => {
    if(err) throw err;
    console.log(`Inserted: ${res.insertedCount} rows`);
    client.close();
  });
});
});
//*/
///*
csvtojson() 
.fromFile("./csv_files/orders_filtered.csv")
.then(csvOrdersData => {
  console.log("Length of orders array: ", csvOrdersData.length);
  mongodb.connect(url,
  {useCreateIndex: true,
  useFindAndModify: false,
  useNewUrlParser: true,
  useUnifiedTopology: true
  },
  (err, client) => {
  if(err) throw err;

  client.db("salesdisplay_db")
  .collection("orders")
  .deleteMany((err, res) => {
    if(err) throw err;
    console.log("Deleted contents");
    //client.close();
  })
//  client.db("salesdisplay_db")
//  .collection("orders")
  .insertMany(csvOrdersData, (err, res) => {
    if(err) throw err;
    console.log(`Inserted: ${res.insertedCount} rows`);
    client.close();
  });
});
});
//*/

const mongoose = require("mongoose");
const url = "mongodb://localhost:27017/salesdisplay_db";
const connect = mongoose.connect(url, {
  useCreateIndex: true,
  useFindAndModify: false,
  useNewUrlParser: true,
  useUnifiedTopology: true
});


connect.then(() => {console.log("Connected to server.");}
, err => console.log(err)); //another way of catching error

var app = express();


// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', indexRouter);
app.use('/users', usersRouter);
app.use('/deals', dealRouter);
app.use('/orders', orderRouter);

app.all("*", (req, res, next) => {
  if(req.secure) {
    return next();
  } else {
    console.log(`Redirecting to: https://${req.hostname}:${app.get("secPort")}${req.url}`);
    res.redirect(301, `https://${req.hostname}:${app.get("secPort")}${req.url}`)
  }
});

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  next(createError(404));
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;

async function  csvToJson() {
  
}
async function deleteDeals() {
  
}
async function createDeals() {
  
}
